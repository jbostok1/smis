services:
  orthanc:
    image: jodogne/orthanc:latest
    container_name: smis-orthanc
    ports: ["8042:8042", "4242:4242"]
    volumes:
      - ./orthanc/orthanc.json:/etc/orthanc/orthanc.json:ro
      - orthanc-storage:/var/lib/orthanc/db
    restart: unless-stopped

  ohif:
    image: ohif/viewer:latest
    container_name: smis-ohif
    ports: ["3000:80"]
    volumes:
      - ./ohif/app-config.json:/usr/share/nginx/html/app-config.json:ro
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: smis-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: smis
      MINIO_ROOT_PASSWORD: smis-secret-123
    ports: ["9000:9000", "9001:9001"]
    volumes: [minio-data:/data]
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: smis-pg
    environment:
      POSTGRES_USER: galaxy
      POSTGRES_PASSWORD: galaxy
      POSTGRES_DB: galaxy
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U galaxy"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  jupyter:
    build: ./jupyter
    container_name: smis-jupyter
    ports: ["8888:8888"]
    volumes:
      - jhub-home:/home/jovyan
      - ./notebooks:/workspace
    command: >
      bash -lc "jupyter lab
      --ip=0.0.0.0 --port=8888 --no-browser
      --ServerApp.token='' --ServerApp.password=''
      --ServerApp.base_url=/ --allow-root"
    restart: unless-stopped

  galaxy:
    build: ./galaxy # <-- Build our custom image
    container_name: smis-galaxy
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    ports: ["8080:80"]
    environment:
      GALAXY_CONFIG_BRAND: "SMIS Galaxy"
      GALAXY_CONFIG_ADMIN_USERS: "admin@local"
      GALAXY_CONFIG_OBJECT_STORE_CONFIG_FILE: /export/galaxy/config/object_store_conf.xml
      GALAXY_CONFIG_TOOL_CONFIG_FILE: /export/galaxy/config/tool_conf.xml
      GALAXY_CONFIG_DATABASE_CONNECTION: postgresql://galaxy:galaxy@postgres:5432/galaxy?client_encoding=utf8
    volumes:
      - galaxy-data:/export # <-- Only the data volume
    restart: unless-stopped

volumes:
  orthanc-storage:
  minio-data:
  pgdata:
  jhub-home:
  galaxy-data: