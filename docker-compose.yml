services:
  orthanc:
    image: jodogne/orthanc:latest
    container_name: smis-orthanc
    ports:
      - "8042:8042"
      - "4242:4242"
    volumes:
      - ./orthanc/orthanc.json:/etc/orthanc/orthanc.json:ro
      - orthanc-storage:/var/lib/orthanc/db
    restart: unless-stopped

  ohif:
    image: ohif/viewer:latest
    container_name: smis-ohif
    depends_on:
      - orthanc
    environment:
      - APP_CONFIG=/usr/share/nginx/html/app-config.json
    ports:
      - "3000:80"
    volumes:
      - ./ohif/app-config.json:/usr/share/nginx/html/app-config.json:ro
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: smis-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: smis
      MINIO_ROOT_PASSWORD: smis-secret-123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped

  jupyter:
    build: ./jupyter
    image: smis-jupyter:latest
    container_name: smis-jupyter
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: smis
      S3_SECRET_KEY: smis-secret-123
    ports:
      - "8888:8888"
    volumes:
      - jhub-home:/home/jovyan
      - ./notebooks:/workspace
    depends_on:
      - minio
    command: >
      bash -lc "jupyter lab
      --ip=0.0.0.0 --port=8888 --no-browser
      --ServerApp.token='' --ServerApp.password=''
      --ServerApp.base_url=/ --allow-root"
    restart: unless-stopped

  monailabel:
    image: projectmonai/monailabel:latest
    container_name: smis-monailabel
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
    depends_on:
      - orthanc
    ports:
      - "8000:8000"
    command: ["bash","-lc","monailabel apps --download --name radiology --output /workspace/apps && monailabel start_server --app /workspace/apps/radiology --studies http://orthanc:8042/dicom-web --conf models all --host 0.0.0.0 --port 8000"]
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: smis-pg
    environment:
      POSTGRES_USER: galaxy
      POSTGRES_PASSWORD: galaxy
      POSTGRES_DB: galaxy
    ports:
      - "5432:5432"   # optional; host access
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U galaxy -d galaxy || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  galaxy:
    image: quay.io/bgruening/galaxy:24.1
    container_name: smis-galaxy
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      orthanc:
        condition: service_started
    ports:
      - "8080:80"
    
    environment:
      GALAXY_CONFIG_BRAND: "SMIS Galaxy"
      GALAXY_CONFIG_ADMIN_USERS: "admin@local"
      GALAXY_CONFIG_OBJECT_STORE_CONFIG_FILE: /galaxy/config/object_store_conf.xml
      GALAXY_CONFIG_TOOL_CONFIG_FILE: /galaxy/config/tool_conf.xml
      GALAXY_CONFIG_DATABASE_CONNECTION: postgresql://galaxy:galaxy@postgres:5432/galaxy?client_encoding=utf8
      GALAXY_CONFIG_DATABASE_AUTO_MIGRATE: "true"
      GALAXY_CONFIG_INSTALL_DATABASE: "true"
      GALAXY_CONFIG_INTERACTIVETOOLS_ENABLE: "false"   # optional, quiets warnings


    volumes:
      - ./galaxy/config:/export/galaxy/config
      - ./galaxy/tools:/export/galaxy/tools
      - ./galaxy/workflows:/export/galaxy/workflows
      - galaxy-data:/export
    restart: unless-stopped

volumes:
  orthanc-storage: {}
  minio-data: {}
  jhub-home: {}
  galaxy-data: {}
  pgdata: {}
  # Optional MONAI caches:
  # monai-cache: {}
  # monai-apps: {}
